---

- name: Create Target Schema
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - schema.yml
  vars:
    apic_host: sandboxapicdc.cisco.com
    username: admin
    password: '!v3G@!4@Y'
    validate_certs: no

  tasks:

    - name: Create tenant
      cisco.aci.aci_tenant:
        host: "{{ apic_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ validate_certs }}"
        tenant: "{{ tenant_name }}"
        state: present
      delegate_to: localhost
      register: tenant_result

    - name: Create VRF
      cisco.aci.aci_vrf:
        host: "{{ apic_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ validate_certs }}"
        tenant: "{{ tenant_name }}"
        vrf: "{{ vrf_name }}"
        state: present
      delegate_to: localhost
      register: vrf_result

    - name: Create Bridge Domain
      cisco.aci.aci_bd:
        host: "{{ apic_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ validate_certs }}"
        tenant: "{{ tenant_name }}"
        bd: "{{ item.name }}"
        vrf: "{{ vrf_name }}"
        arp_flooding: false
        enable_routing: true
        state: present
      delegate_to: localhost
      loop: "{{ bridge_domains }}"

    - name: Add all subnets to each Bridge Domain
      cisco.aci.aci_bd_subnet:
        host: "{{ apic_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ validate_certs }}"
        tenant: "{{ tenant_name }}"
        bd: "{{ item.0.name }}"
        gateway: "{{ item.1.gateway }}"
        mask: "{{ item.1.mask }}"
        scope: "private"
        state: present
      delegate_to: localhost
      loop: "{{ bridge_domains | subelements('subnets') }}"
    
    - name: Create Application Profile
      cisco.aci.aci_ap:
        host: "{{ apic_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ validate_certs }}"
        tenant: "{{ tenant_name }}"
        app_profile: "{{ ap_name }}"
        description: "App Profile for Enterprise Services"
        state: present
      delegate_to: localhost

    - name: Create Application EPG
      cisco.aci.aci_epg:
        host: "{{ apic_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: "{{ validate_certs }}"
        tenant: "{{ tenant_name }}"
        ap: "{{ ap_name }}"
        epg: "duplication_test"
        bd: "Enterprise_Services"
        state: present
      delegate_to: localhost